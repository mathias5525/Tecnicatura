var nombre = "Jose";
var apellido = "Montes";
var nombreCompleto = nombre + " " + apellido;
console.log(nombreCompleto); // Jose Montes
var nombreCompleto2 = `${nombre} ${apellido}`;
console.log(nombreCompleto2); // Jose Montes
var juntos = nombre + 78 + 17;
console.log(juntos); // Jose7817
var juntos2 = nombre + (78 + 17);   
console.log(juntos2); // Jose95

nombre+=apellido
console.log(nombre); // JoseMontes

let nombre2 = "Pedro";
console.log(nombre2); // Pedro

const apellido2 = "Lepes";
console.log(apellido2); // Lepes
// apellido2 = "Perez"; // Esto causaría un error porque apellido2 es una constante

//Leccion04 - Ejercicio
//Ampliamos el uso de var let y const
/*Con var puedes reasignar en cualquier momento 
este forma parte del ambito global
un error es que se sobreescriba */

var nombre = 'Ariel';
nombre = 'Osvaldo';
console.log(nombre); // Osvaldo

function saludar() {
    var saludo = 'Natalia';
    console.log(nombre); // Natalia
}
console.log(nombre); // Osvaldo //aqui no lee el dato en la funcion

if (true) {
    var edad = 34;
    console.log(edad); // 34
}
console.log(edad); // 34 //aqui si lee el dato en el if

/*Con let puedes reasignar en cualquier momento
la diferencia es que su ambito es de bloque,
solo disponible dentro de un bloque de llaves o dentro de una funcion*/

function saludar2() {
    let nombre2 = 'Ariel';
    console.log(nombre2); // Ariel
}
console.log(nombre2); // ReferenceError: nombre2 is not defined

if (true) {
    let edad2 = 33;
    console.log(edad2); // 32
}
console.log(edad2); // ReferenceError: edad2 is not defined

/*const se utiliza para valores constantes que no pueden ser reasignadas*/

const fechaNacimiento = 2006;
console.log(fechaNacimiento); // 2006
fechaNacimiento = 2003; // TypeError: Assignment to constant variable
console.log(fechaNacimiento); // 2006
// fechaNacimiento = 2003; // Esto causaría un error porque fechaNacimiento es una constante